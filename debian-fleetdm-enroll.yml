#   _  __                   _ _ ____             _             
#  | |/ /__ ___      ____ _(_|_)  _ \ __ _ _ __ | |_ ___ _   _ 
#  | ' // _` \ \ /\ / / _` | | | |_) / _` | '_ \| __/ __| | | |
#  | . \ (_| |\ V  V / (_| | | |  __/ (_| | | | | |_\__ \ |_| |
#  |_|\_\__,_| \_/\_/ \__,_|_|_|_|   \__,_|_| |_|\__|___/\__,_|
#                   ____  _             _                 _        
#  [   ANSIBLE   ] |  _ \| | __ _ _   _| |__   ___   ___ | | _____ 
#  Please only use | |_) | |/ _` | | | | '_ \ / _ \ / _ \| |/ / __|
#  playbooks if    |  __/| | (_| | |_| | |_) | (_) | (_) |   <\__ \
#  you know what   |_|   |_|\__,_|\__, |_.__/ \___/ \___/|_|\_\___/
#  they change/do                 |___/ 
# 
#  .---------| FleetDM (osquery) DEB package deploy/enrollment
#  |
#  | This playbook will do the following:
#  | - Check if wget is there
#  | - Download the defined fleetdm osquery package
#  | - Install the downloaded package
#  | - Remove the downloaded package
#  |
#  | !! In order for this to work you need extra variables set !!
#  | The var net_ftp must point to a URL where you can download
#  | the package from, fleetdeb must be the payload.
#  |
#  | {
#  |   "net_ftp": "ftp://net:net@10.10.10.100:21/",
#  |   "fleetdeb": "fleet-osquery_1.10.0_amd64.deb"
#  | }
#  `---------------------------------------------------------------
---

- hosts: debian
  tasks:
    - name: Make sure wget is installed and get version
      shell:
        cmd: wget --version 2>&1 | head -1 | cut -d '"' -f 2
      register: wget
      check_mode: false
      changed_when: false
      failed_when: "'not found' in wget.stdout"

    - name: Host information for FleetDM osquery enrollment
      ansible.builtin.debug:
        msg: "For your reference, i'm called {{ ansible_hostname }}"

    - name: Download FleetDM package
      shell:
        cmd: wget --quiet --no-passive-ftp --output-document="/tmp/{{ fleetdeb }}" "{{ net_ftp }}{{ fleetdeb }}"
      check_mode: false
      changed_when: false

    - name: Try to install package
      shell:
        cmd: dpkg -E -i "/tmp/{{ fleetdeb }}" 2>&1
      register: dpkg
      check_mode: false
      changed_when: "'already installed' not in dpkg.stdout"

    - name: Cleanup FleetDM package
      shell:
        cmd: rm "/tmp/{{ fleetdeb }}"
      check_mode: false
      changed_when: false
